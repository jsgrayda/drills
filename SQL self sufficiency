--1
SELECT column_name, data_type 
FROM information_schema.columns
WHERE table_name = 'naep';


--2
SELECT *
FROM naep
LIMIT 50;

--3
SELECT 
	COUNT(avg_math_4_score) AS avg_math_4_score_COUNT,
	AVG(avg_math_4_score) AS avg_math_4_score_AVG,
	MIN(avg_math_4_score) AS avg_math_4_score_MIN,
	MAX(avg_math_4_score) AS avg_math_4_score_MAX,
	state
FROM naep
GROUP BY naep.state
ORDER BY naep.state ASC;

--4
SELECT 
	COUNT(avg_math_4_score) AS avg_math_4_score_COUNT,
	AVG(avg_math_4_score) AS avg_math_4_score_AVG,
	MIN(avg_math_4_score) AS avg_math_4_score_MIN,
	MAX(avg_math_4_score) AS avg_math_4_score_MAX,
	state
FROM naep
GROUP BY naep.state
HAVING (MAX(avg_math_4_score) - MIN(avg_math_4_score)) > 30
ORDER BY naep.state ASC;

--5
SELECT naep.state as bottom_10_states
FROM naep
WHERE year = 2000
ORDER BY avg_math_4_score ASC
LIMIT 10;

--6, 
SELECT ROUND(AVG(avg_math_4_score), 2)
FROM naep
WHERE year = 2000; 
		
--7
SELECT naep.state AS below_average_states_y2000
FROM naep
WHERE avg_math_4_score < 
	(SELECT ROUND(AVG(avg_math_4_score), 2)
	FROM naep
	WHERE year = 2000);

--8
SELECT naep.state AS scores_missing_y2000
FROM naep
WHERE 
	avg_math_4_score IS NULL AND
	year = 2000;
	
--9
SELECT naep.state, ROUND(naep.avg_math_4_score, 2) AS avg_math_4_score , finance.total_expenditure
FROM naep LEFT OUTER JOIN finance
ON naep.id = finance.id
WHERE naep.year = 2000 AND naep.avg_math_4_score IS NOT NULL
ORDER BY finance.total_expenditure DESC;
