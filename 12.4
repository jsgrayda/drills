--DRILL 1
--query that returns a list of all the unique values in the 'country' field.
SELECT DISTINCT country
FROM ksprojects;

--DRILL 2
--How many unique values for main_category field? 
--What about for the category field? -- 158
SELECT COUNT(DISTINCT(main_category))
FROM ksprojects; --15

--DRILL 3
--Get list of all unique combinations of main_category and category fields, 
--sorted A to Z by main_category.

SELECT DISTINCT main_category, category
FROM ksprojects
ORDER BY main_category;

--DRILL 4
--How many unique categories are in each main_category?
SELECT COUNT(DISTINCT category), main_category
FROM ksprojects
GROUP BY main_category;

--DRILL 5
--Returns the average number of backers per main_category, 
--rounded to the nearest whole number
--sorted from high to low.
SELECT ROUND(AVG(backers),0) AS avg_backers_per_mc, main_category
FROM ksprojects
GROUP BY main_category
ORDER BY avg_backers_per_mc;

--DRILL 6
--query that shows, for each category, 
--how many campaigns were successful , THIS
--the average difference per project between dollars pledged and the goal.
SELECT 
	category,
	COUNT(state) AS success_campaign, 
	AVG(usd_pledged - goal)
FROM ksprojects 
WHERE state = 'successful'
GROUP BY category;

--DRILL 7
--query that shows, for each main category, 
--how many projects had zero backers for that category 
--and the largest goal amount for that category (also for projects with zero backers).
SELECT 
	main_category,
	COUNT(name) AS projects_w_zerobackers,
	MAX(goal)
FROM ksprojects
WHERE backers = 0
GROUP BY main_category;

--DRILL 8
--For each category, 
--find the average USD per backer, 
--and return only those results for which the average USD per backer is < $50, 
--sorted high to low. 
--Hint: Division by NULL is not possible,
--use NULLIF to replace NULLs with 0 in the average calculation.
SELECT 
	category,
	AVG(usd_pledged/NULLIF(backers,0)) AS avg_usd_perbacker
FROM ksprojects
GROUP BY category
HAVING AVG(usd_pledged/NULLIF(backers,0)) < 50
ORDER BY AVG(usd_pledged/NULLIF(backers,0)) DESC;

--DRILL 9
--query that shows, for each main_category, 
--how many successful projects had between 5 and 10 backers.
SELECT main_category, COUNT(state) AS num_success_proj
FROM ksprojects
WHERE backers BETWEEN 5 AND 10
GROUP BY main_category;

--DRILL 10
--total of the amount ‘pledged’ for each type of currency 
--grouped by its respective currency. Sort by ‘pledged’ from high to low.
SELECT currency, SUM(pledged) AS tot_amt_pledged_per_currency
FROM ksprojects
GROUP BY currency
ORDER BY SUM(pledged) DESC;

--DRILL 11
--Excluding Games and Technology records in the main_category field, 
--return the total of all backers for successful projects by main_category 
--where the total was more than 100,000. Sort by main_category from A to Z.
SELECT main_category, SUM(backers)
FROM ksprojects
WHERE 
	main_category NOT IN ('Games', 'Technology') AND
	state = 'successful'
GROUP BY main_category
HAVING SUM(backers) > 100000
ORDER BY main_category ;
